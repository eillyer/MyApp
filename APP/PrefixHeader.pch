//
//  PrefixHeader.pch
//  MyBaseApp
//
//  Created by julong on 2017/10/17.
//  Copyright © 2017年 eillyer. All rights reserved.
//


#ifndef PrefixHeader_pch
#define PrefixHeader_pch

// Include any system framework and library headers here that should be included in all compilation units.
// You will also need to set the Prefix Header build setting of one or more of your targets to reference this file.

//视图类
#define kScreenWidth [UIScreen mainScreen].bounds.size.width
#define kScreenHeight [UIScreen mainScreen].bounds.size.height

#define kFWColorGreen [UIColor colorWithRed:25/255.0 green:180.0/255 blue:145.0/255 alpha:1]
#define kFWColorgran [UIColor colorWithRed:182/255.0 green:182.0/255 blue:182.0/255 alpha:1]
#define kFWColorErweima [UIColor greenColor]//二维码边角颜色

#define kSaveBtnFrame CGRectMake(0, 0, 70, 35)
#define kTimeVideo 10//视频录制时间
//#define kImageNum 6

//十六进制的颜色
#define UIColorFromHex(s)  [UIColor colorWithRed:(((s & 0xFF0000) >> 16))/255.0 green:(((s &0xFF00) >>8))/255.0 blue:((s &0xFF))/255.0 alpha:1.0]
#define kColorStar UIColorFromHex(0x6bc2ff)
#define kColorEnd UIColorFromHex(0x0096ff)
//所有边框颜色
#define kFWColorBorder UIColorFromHex(0xe1e1e1)

//下拉和上拉的文字描述
#define kMJRefreshNameUp @"下拉刷新数据↓"
#define kMJRefreshNameDown @"点击加载更多"
#define kMJRefreshNameWait @"加载中..."
#define kMJRefreshNameNOData @"没有更多数据"
#define kMJRefreshNameReadly @"准备加载数据"


//地图
#define kMapZoom 8.345
#define kMapID @"2fe4409477d9cf0703f5b2a1092a8f0d"

#define kSoundName @"ReceivedMessage"


//#import "UIColor+MADColor.h"
//#import "MADMacroDefines.h"


#define kBannerArr @[@"banner2a",@"banner1a",@"banner3a",@"banner4a"]

//网络类
#define kNetWorkingHeper [AFNetworkingHelper sharedAFNetworkingHelper]

//*******************      正式服务器
#define kNetMain @"http://61.185.210.206:8888/maintenance_xw"
#define kNetMainImage @"http://61.185.210.206:8888/image"
#define kNetMainVideo @"http://61.185.210.206:8888/video"

//````````````````````     正式老版服务器
//#define kNetMain @"http://203.171.227.228:8037/maintenance_xw"
//#define kNetMainImage @"http://203.171.227.228:8037/image"
//#define kNetMainVideo @"http://203.171.227.228:8037/video"

//*******************      测试服务器
//#define kNetMain @"http://203.171.227.228:8036/maintenance_xw"
//#define kNetMainImage @"http://203.171.227.228:8036/image"
//#define kNetMainVideo @"http://203.171.227.228:8036/video"


//#define kNetMain @"http://192.168.7.117:8080/maintenance_xw"
//#define kNetMainImage @"http://192.168.7.117:8080/image"
//#define kNetMainVideo @"http://192.168.7.117:8080/video"

//********************     个人
//#define kNetMain @"http://192.168.7.125:8080/maintenance_xw"



//http://203.171.227.228:8036/maintenance/src/xuncha/2016-09-30/d78491e64b85e31f10c43272364b4b631475227984250.jpg

//工具类
#import "UIImage+image.h"
#import "AFNetWorkingHelper.h"
#import "NSString+NowDate.h"
//
#import "UserInfoModel.h"
#import "Utility.h"
#import <MJRefresh.h>
#define kUserInfo [UserInfoModel sharedUserInfoModel]
#define kNetWorkHelper [AFNetWorkingHelper sharedAFNetworkingHelper]
#import "UIView+layerView.h"
//

//如果release状态就不执行NSLog函数
#ifndef __OPTIMIZE__
#define NSLog(...) NSLog(__VA_ARGS__)
#else
# define NSLog(...) {}
#endif

#endif /* PrefixHeader_pch */


//通用宏定义

#ifndef define_h

#define define_h

//获取系统对象

#define kApplication [UIApplication sharedApplication]

#define kAppWindow [UIApplication sharedApplication].delegate.window

#define kAppDelegate [AppDelegate shareAppDelegate]

#define kRootViewController [UIApplication sharedApplication].delegate.window.rootViewController

#define kUserDefaults [NSUserDefaults standardUserDefaults]

#define kNotificationCenter [NSNotificationCenter defaultCenter]

//获取屏幕宽高


#define kScreen_Bounds [UIScreen mainScreen].bounds

#define Iphone6ScaleWidth KScreenWidth/375.0

#define Iphone6ScaleHeight KScreenHeight/667.0

//根据ip6的屏幕来拉伸

#define kRealValue (with)((with)*(KScreenWidth/375.0f))

//强弱引用

#define kWeakSelf (type)__weak typeof(type)weak##type = type;

#define kStrongSelf (type)__strong typeof(type)type = weak##type;

//View圆角和加边框

#define ViewBorderRadius (View,Radius,Width,Color) \
\
[View.layer setCornerRadius:(Radius)];\
[View.layer setMasksToBounds:YES];\
[View.layer setBorderWidth:(Width)];\
[View.layer setBorderColor:[Color CGColor]]

// View圆角

#define ViewRadius(View,Radius)\
\
[View.layer setCornerRadius:(Radius)];\
[View.layer setMasksToBounds:YES]

//property属性快速声明

#define PropertyString(s) @property(nonatomic,copy)NSString * s

#define PropertyNSInteger(s) @property(nonatomic,assign)NSIntegers

#define PropertyFloat(s) @property(nonatomic,assign)floats

#define PropertyLongLong(s) @property(nonatomic,assign)long long s

#define PropertyNSDictionary(s) @property(nonatomic,strong)NSDictionary * s

#define PropertyNSArray(s) @property(nonatomic,strong)NSArray * s

#define PropertyNSMutableArray(s) @property(nonatomic,strong)NSMutableArray * s

///IOS版本判断

#define IOSAVAILABLEVERSION (version)([[UIDevice currentDevice]availableVersion:version]< 0)

//当前系统版本

#define CurrentSystemVersion [[UIDevice currentDevice].systemVersion doubleValue]

//当前语言

#define CurrentLanguage (NSLocale preferredLanguages]objectAtIndex:0])

//-------------------打印日志-------------------------

//DEBUG模式下打印日志,当前行

#import "GHConsole.h"


#ifdef DEBUG

#define DLog(fmt,...)NSLog((@"%s[Line %d]" fmt),__PRETTY_FUNCTION__,__LINE__,##__VA_ARGS__);

#else

#define DLog(...)

#endif

//拼接字符串

#define NSStringFormat(format,...)[NSString stringWithFormat:format,##__VA_ARGS__]

//颜色

#define KClearColor [UIColor clearColor]

#define KWhiteColor [UIColor whiteColor]

#define KBlackColor [UIColor blackColor]

#define KGrayColor [UIColor grayColor]

#define KGray2Color [UIColor lightGrayColor]

#define KBlueColor [UIColor blueColor]

#define KRedColor [UIColor redColor]

#define kRandomColorKRGBColor (arc4random_uniform(256)/255.0,arc4random_uniform(256)/255.0,arc4random_uniform(256)/255.0)//随机色生成

#define UIColorFromRGB(r,g,b,alph) [UIColor colorWithRed:r/255.0 green:g/255.0 blue:b/255.0 alpha:alph]

//字体

#define BOLDSYSTEMFONT(FONTSIZE) [UIFont boldSystemFontOfSize:FONTSIZE]

#define SYSTEMFONT(FONTSIZE) [UIFont systemFontOfSize:FONTSIZE]

#define FONT(NAME,FONTSIZE) [UIFont fontWithName:(NAME)size:(FONTSIZE)]

//定义UIImage对象

#define ImageWithFile (_pointer)[UIImage imageWithContentsOfFile:([[NSBundle mainBundle]pathForResource:[NSString stringWithFormat:@"%@@%dx",_pointer,(int)[UIScreen mainScreen].nativeScale]ofType:@"png"])]

#define IMAGE_NAMED(name) [UIImage imageNamed:name]

//数据验证

#define StrValid(f) (f!=nil &&[f isKindOfClass:[NSString class]]&& ![f isEqualToString:@""])

#define SafeStr(f) (StrValid(f)?f:@"")

#define HasString(str,eky) ([str rangeOfString:key].location!=NSNotFound)

#define ValidStr(f) StrValid(f)

#define ValidDict(f) (f!=nil &&[f isKindOfClass:[NSDictionary class]])

#define ValidArray(f) (f!=nil &&[f isKindOfClass:[NSArray class]]&&[f count]>0)

#define ValidNum(f) (f!=nil &&[f isKindOfClass:[NSNumber class]])

#define ValidClass(f,cls) (f!=nil &&[f isKindOfClass:[cls class]])

#define ValidData(f) (f!=nil &&[f isKindOfClass:[NSData class]])

//获取一段时间间隔

#define kStartTime CFAbsoluteTime start = CFAbsoluteTimeGetCurrent();

#define kEndTimeNSLog (@"Time: %f",CFAbsoluteTimeGetCurrent()- start)

//打印当前方法名

#define ITTDPRINTMETHODNAME()ITTDPRINT(@"%s",__PRETTY_FUNCTION__)

//GCD

#define kDISPATCH_ASYNC_BLOCK(block)dispatch_async(dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT,0),block)

#define kDISPATCH_MAIN_BLOCK(block)dispatch_async(dispatch_get_main_queue(),block)

//GCD -一次性执行

#define kDISPATCH_ONCE_BLOCK(onceBlock)static dispatch_once_t onceToken;dispatch_once(&onceToken,onceBlock);

//单例化一个类

#define SINGLETON_FOR_HEADER(className)\
\
+(className *)shared##className;
#define SINGLETON_FOR_CLASS(className)\
\
+(className *)shared##className { \
    static className *shared##className = nil;\
    static dispatch_once_t onceToken;\
    dispatch_once(&onceToken,^{ \
        shared##className =[[self alloc]init];\
    });\
    return shared##className;\
}



//弃用API，用作API更新
#define __deprecated    __attribute__((deprecated))
//使用：@property (nonatomic,strong) NSString  * aaa __deprecated_msg("sss");
//带描述信息的弃用
#define __deprecated_msg(_msg) __attribute__((deprecated(_msg)))

//遇到__unavailable的变量/方法，编译器直接抛出Error
#define __unavailable   __attribute__((unavailable))

//告诉编译器，即使这个变量/方法 没被使用，也不要抛出警告
#define __unused    __attribute__((unused))

//和__unused相反
#define __used      __attribute__((used))

//如果不使用方法的返回值，进行警告
#define __result_use_check __attribute__((__warn_unused_result__))

//OC方法在Swift中不可用
#define __swift_unavailable(_msg)   __attribute__((__availability__(swift, unavailable, message=_msg)))

#endif /* define_h */
